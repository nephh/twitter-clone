import Head from "next/head";
import Link from "next/link";
import {
  UserButton,
  SignInButton,
  SignUpButton,
  SignedIn,
  SignedOut,
  useUser,
} from "@clerk/nextjs";

import { type RouterOutputs, api } from "~/utils/api";
import Image from "next/image";

export function CreatePostWizard() {
  const { user, isSignedIn } = useUser();

  if (!user) {
    return null;
  }

  return (
    <div className="flex w-full gap-4">
      <UserButton afterSignOutUrl="/" />
      <input
        type="text"
        placeholder="Type something..."
        className="grow bg-transparent outline-none"
      />
    </div>
  );
}

type PostWithUser = RouterOutputs["post"]["getAll"][number];

function PostView(props: PostWithUser) {
  const { post, author } = props;
  return (
    <div className="border-b border-zinc-300 p-6">
      <div className="mb-4 flex flex-row justify-between ">
        <div className="flex w-full flex-row items-center gap-4">
          <Image
            src={author.imageUrl}
            alt="post profile picture"
            width={50}
            height={50}
            className="rounded-full"
          />
          <div className="flex flex-col">
            <p className="text-lg">{author.fullName}</p>
            <p className="text-xs">@{author.username}</p>
          </div>
        </div>
        <div className="flex justify-end text-sm text-gray-500">
          {post.createdAt.toLocaleString()}
        </div>
      </div>
      <div className="p-2">{post.content}</div>
    </div>
  );
}
export default function Home() {
  const { user, isSignedIn } = useUser();
  const { data, isLoading } = api.post.getAll.useQuery();

  if (isLoading) {
    return <div>Loading...</div>;
  }

  if (!data) {
    return <div>Something went wrong :(</div>;
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center">
        <div className="flex h-screen w-full flex-col border-x md:max-w-4xl">
          <div className="flex flex-row items-center justify-center gap-4 border-b p-4">
            <SignedIn>
              <CreatePostWizard />
            </SignedIn>
            <SignedOut>
              <SignInButton />
              <SignUpButton />
            </SignedOut>
          </div>
          <div className="flex flex-col">
            {data.map(({ post, author }) => (
              <PostView key={post.id} post={post} author={author} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
